{"version":3,"sources":["components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contactSlice.js","redux/actions.js","redux/reducers.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactList/Contact/Contact.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","phone","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","filterContact","createAction","filterReducer","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","ContactForm","contacts","useState","setName","setNumber","handleChange","e","target","value","reset","className","s","wrapperForm","bodyForm","onSubmit","preventDefault","some","contact","includes","window","alert","formGrup","formGgroupLabel","type","onChange","pattern","title","required","formGroupInput","submitButton","button","ContactList","children","container","listContainer","Contact","id","itemContact","itemSpanContent","onClick","Filter","filter","useSelector","state","useDispatch","filterForm","filterGrup","filterGrupLabel","filterGrupInput","currentTarget","App","data","filterContacts","toLowerCase","map","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,gBAAkB,iCAAiC,OAAS,0B,mBCAzHD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,WAAa,2BAA2B,gBAAkB,gCAAgC,gBAAkB,kC,mBCAtKD,EAAOC,QAAU,CAAC,cAAgB,qC,+ICCrBC,EAAcC,YAAU,CACnCC,YAAa,aACbC,UAAWC,YAAe,CACxBC,QAAS,gDAEXC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,aAEpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,kBAAuB,CAC5BK,IAAK,YACLC,OAAQ,OACRG,KAAM,CACJC,KAJG,EAAGA,KAKNC,MALG,EAASC,UAQhBL,gBAAiB,CAAC,iBAMtBM,EAGEvB,EAHFuB,sBACAC,EAEExB,EAFFwB,yBACAC,EACEzB,EADFyB,yBCnCWC,EAAgBC,YAAa,kBCC7BC,EAAgBC,YAAc,GAAD,eACvCH,GAAgB,SAACI,EAAD,YAAMC,YCCZC,EAAQC,YAAe,CAClCC,SAAO,mBACJlC,EAAYE,YAAcF,EAAYkC,SADlC,uBAEGN,GAFH,GAKPO,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9BpC,EAAYmC,gBAIhBE,YAAeL,EAAMM,U,+CC4ENC,MAxFf,YAAkC,IAAZC,EAAW,EAAXA,SACpB,EAAwBC,mBAAS,IAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOnB,EAAP,KAAeqB,EAAf,KAGA,EAAwBlB,IAAjBP,EAAP,oBAEM0B,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlB1B,EAAR,EAAQA,KAAM2B,EAAd,EAAcA,MACZ,OAAQ3B,GACR,IAAK,OACHsB,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,KAyBVC,EAAQ,WACXN,EAAQ,IACTC,EAAU,KAGV,OACE,qBAAKM,UAAWC,IAAEC,YAAlB,SACE,uBAAMF,UAAWC,IAAEE,SAAUC,SAxBd,SAAAR,GAOnB,GANAA,EAAES,iBAEwBd,EAASe,MAAK,SAAAC,GAAO,OAC7CA,EAAQpC,KAAKqC,SAASrC,MAMtB,OAFAsC,OAAOC,MAAP,UAAgBvC,EAAhB,iCACA4B,IAIF9B,EAAc,CAAEE,OAAME,WACtB0B,KAUI,UACE,sBAAKC,UAAWC,IAAEU,SAAlB,UACE,wBAAOX,UAAWC,IAAEW,gBAApB,iBAEE,uBACEC,KAAK,OACLf,MAAO3B,EACP2C,SAAUnB,EACVxB,KAAK,OACL4C,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,UAAWC,IAAEiB,oBAGjB,wBAAOlB,UAAWC,IAAEW,gBAApB,mBAEE,uBACEC,KAAK,MACLf,MAAOzB,EACPyC,SAAUnB,EACVxB,KAAK,SACL4C,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjB,UAAWC,IAAEiB,uBAInB,qBAAKlB,UAAWC,IAAEkB,aAAlB,SACE,wBAAQnB,UAAWC,IAAEmB,OAAQP,KAAK,SAAlC,iC,iBCtEGQ,MATf,YAAmC,IAAZC,EAAW,EAAXA,SAEnB,OACE,qBAAKtB,UAAWC,IAAEsB,UAAlB,SACE,oBAAIvB,UAAWC,IAAEuB,cAAjB,SAAiCF,O,iBCqB1BG,MArBf,YAAqD,IAAD,IAAjClB,QAAWpC,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,OAAQqD,EAAQ,EAARA,GAE1C,EAAwBnD,IAAjBZ,EAAP,oBAEE,OACE,qBAAIqC,UAAWC,IAAE0B,YAAjB,UACE,sBAAM3B,UAAWC,IAAE2B,gBAAnB,SAAqCzD,IACrC,sBAAM6B,UAAWC,IAAE2B,gBAAnB,SAAqCvD,IACrC,wBAAQ2B,UAAWC,IAAEmB,OACnBS,QAAS,kBAAOlE,EAAc+D,IADhC,+B,iBCaOI,MAxBf,WACC,IAAMC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UACnC1C,EAAW6C,cAEf,OACE,qBAAKlC,UAAWC,IAAEkC,WAAlB,SACE,qBAAKnC,UAAWC,IAAEmC,WAAlB,SACE,wBAAOpC,UAAWC,IAAEoC,gBAApB,kCAEE,uBACErC,UAAWC,IAAEqC,gBACbzB,KAAK,OACL1C,KAAK,SACL2B,MAAOiC,EACPjB,SAAU,SAAAlB,GAAC,OAAIP,EAASZ,EAAcmB,EAAE2C,cAAczC,mB,QCwBrD0C,MAlCf,WAQE,IAAcjD,EAAajB,IAAnBmE,KAEFV,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,UAEpCW,EAAiB,SAAAnD,GAAQ,OAC7BA,EACI,YAAIA,GAAUwC,QAAO,qBAAG5D,KAAgBwE,cAAcnC,SAASuB,MAC/D,MAEJ,OACE,sBAAK/B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,CAAaT,SAAUA,IACvB,oBAAIS,UAAU,QAAd,sBACA,cAAC,EAAD,IAEF,cAAC,EAAD,UACI0C,EAAenD,IACfmD,EAAenD,GAAUqD,KAAI,SAAArC,GAAO,OAClC,cAAC,EAAD,CAAwBA,QAASA,GAAnBsC,wBC1B1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SAEE,cAAC,EAAD,QAIJkE,SAASC,eAAe,U,kBChB1BrG,EAAOC,QAAU,CAAC,SAAW,8BAA8B,YAAc,iCAAiC,aAAe,kCAAkC,SAAW,8BAA8B,eAAiB,oCAAoC,kBAAkB,qCAAqC,gBAAkB,qCAAqC,OAAS,4BAA4B,aAAe,qC","file":"static/js/main.6fc3e4e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"Contact_itemContact__CcnBy\",\"itemSpanContent\":\"Contact_itemSpanContent__2rwru\",\"button\":\"Contact_button__1GPNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__3rfHc\",\"filterGrup\":\"Filter_filterGrup__ugJcn\",\"filterGrupInput\":\"Filter_filterGrupInput__1ufm4\",\"filterGrupLabel\":\"Filter_filterGrupLabel__3tgxF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ContactList_listContainer__2oDCk\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6191493641928b001768ffdd.mockapi.io',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: {\r\n          name,\r\n          phone: number,\r\n        },\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contact/filter');","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact } from './actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactsApi } from './contactSlice';\r\nimport { filterReducer } from './reducers';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);","import  { useState } from 'react';\nimport { useCreateContactMutation } from '../../redux/contactSlice'; \n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({contacts}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // const contacts = useSelector(state => state.contacts.items);\n  // const dispatch = useDispatch();\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n      switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n   const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    createContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n     setName('');\n    setNumber('');\n  };\n  \n    return (\n      <div className={s.wrapperForm}>\n        <form className={s.bodyForm} onSubmit={handleSubmit}>\n          <div className={s.formGrup}>\n            <label className={s.formGgroupLabel}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                onChange={handleChange}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n            <label className={s.formGgroupLabel}>\n              number\n              <input\n                type=\"tel\"\n                value={number}\n                onChange={handleChange}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n          </div>\n          <div className={s.submitButton}>\n            <button className={s.button} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n\n\nexport default ContactForm;\n","// import React, { Component } from 'react';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ children}) {\n  \n    return (\n      <div className={s.container}>\n        <ul className={s.listContainer}>{children}</ul>\n      </div>\n    );\n  }\n\nexport default ContactList;\n","// import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { deleteContact } from '../../redux/actions';\nimport { useDeleteContactMutation } from '../../../redux/contactSlice';\nimport s from './Contact.module.css';\n\nfunction Contact({ contact: { name, number, id } }) {\n//  const dispatch = useDispatch();\n  const [deleteContact] = useDeleteContactMutation();\n\n    return (\n      <li className={s.itemContact}>\n        <span className={s.itemSpanContent}>{name}</span>\n        <span className={s.itemSpanContent}>{number}</span>\n        <button className={s.button}\n          onClick={() =>  deleteContact(id)}>\n          Delet contact\n        </button>\n      </li>\n    );\n  }\n\n\nContact.propTypes = {\n  // deleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\nexport default Contact;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n    return (\n      <div className={s.filterForm}>\n        <div className={s.filterGrup}>\n          <label className={s.filterGrupLabel}>\n            Find contacts by name\n            <input\n              className={s.filterGrupInput}\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={e => dispatch(filterContact(e.currentTarget.value))}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n\n\nexport default Filter;\n","import  { useSelector } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Contact from './components/ContactList/Contact';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useFetchContactsQuery } from './redux/contactSlice';\n\nfunction App() {\n  // const contacts = useSelector(state => state.contacts.items);\n  // const filter = useSelector(state => state.contacts.filter);\n\n  // const filteredContacts = [...contacts].filter(({ name }) =>\n  //   name.toLowerCase().includes(filter),\n  // );\n \n  const { data: contacts } = useFetchContactsQuery();\n\n  const filter = useSelector(state => state.filter);\n\n  const filterContacts = contacts =>\n    contacts\n      ? [...contacts].filter(({ name }) => name.toLowerCase().includes(filter))\n      : null;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm contacts={contacts}/>\n        <h2 className=\"title\">Contacts</h2>\n        <Filter  />      \n\n      <ContactList>\n         {filterContacts(contacts) &&\n          filterContacts(contacts).map(contact => (\n            <Contact key={uuidv4()} contact={contact} />\n          ))}\n        </ContactList>\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { store } from './redux/store';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n       {/* </PersistGate> */}\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyForm\":\"ContactForm_bodyForm__1rbc-\",\"wrapperForm\":\"ContactForm_wrapperForm__2J6Rs\",\"stripesBlock\":\"ContactForm_stripesBlock__QJbir\",\"formGrup\":\"ContactForm_formGrup__3ryt6\",\"formGroupInput\":\"ContactForm_formGroupInput__3skh2\",\"form-groupLabel\":\"ContactForm_form-groupLabel__1Oicy\",\"formGgroupLabel\":\"ContactForm_formGgroupLabel__JX2Qi\",\"button\":\"ContactForm_button__1SuT5\",\"submitButton\":\"ContactForm_submitButton__11URT\"};"],"sourceRoot":""}